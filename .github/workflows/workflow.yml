on:
  push:
    branches:
      - main


jobs:
  workflow:
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: java 17 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: application.yml 추가
        run: |
          mkdir ./src/main/resources || true
          echo "${{secrets.APPLICATION_PROPERTIES}}" > ./src/main/resources/application.yml
      - name: 빌드와 테스트
        run: |
          chmod +x ./gradlew
          ./gradlew clean build
      - name: aws 로그인
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: ecr로그인
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: 도커빌드
        run: docker build -t dockerdeploy .

      - name: 도커파일이름변경
        run: docker tag dockerdeploy ${{steps.login-ecr.outputs.registry}}/junig-ecr:latest

      - name: ecr전송
        run: docker push ${{steps.login-ecr.outputs.registry}}/junig-ecr:latest

      - name: ec2원격접속
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{secrets.EC2_PRIVATE_KEY}}
          script_stop: true
          script: |
            docker stop dockerDeploy || true
            docker rm dockerDeploy || true
            docker pull ${{steps.login-ecr.outputs.registry}}/junig-ecr:latest
            docker run -d --name dockerdeploy -p 8080:8080 ${{steps.login-ecr.outputs.registry}}/junig-ecr:latest