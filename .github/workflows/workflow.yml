on:
  push:
    branches:
      - main


jobs:
  workflow:
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: java 17 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: application.yml 추가
        run: |
          mkdir ./src/main/resources || true
          echo "${{secrets.APPLICATION_PROPERTIES}}" > ./src/main/resources/application.yml
      - name: 빌드와 테스트
        run: |
          chmod +x ./gradlew
          ./gradlew clean build
      - name: aws 로그인
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: ecr로그인
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: 도커빌드
        run: docker build -t dockerdeploy .

      - name: 도커파일이름변경
        run: docker tag dockerdeploy ${{steps.login-ecr.outputs.registry}}/junig-ecr:latest

      - name: ecr전송
        run: docker push ${{steps.login-ecr.outputs.registry}}/junig-ecr:latest

      - name: 프로젝트압축
        run: tar -czvf $GITHUB_SHA.tar.gz appspec.yml scripts

      - name: s3업로드
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://docker-deploy-s3/$GITHUB_SHA.tar.gz

      - name: codeDeploy로 ec2 배포 명령
        run: aws deploy create-deployment
          --application-name code-deploy
          --deployment-group-name production
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --s3-location bucket=docker-deploy-s3,bundleType=tgz,key=$GITHUB_SHA.tar.gz